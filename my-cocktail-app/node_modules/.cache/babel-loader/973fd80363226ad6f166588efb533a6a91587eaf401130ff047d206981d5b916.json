{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramit\\\\Desktop\\\\Sem3\\\\WebServerAdmin\\\\BoozyBrowse\\\\my-cocktail-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cocktail, setCocktail] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // ... (rest of your imports and App function)\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n      const drinkData = response.data.drinks[0]; // The API wraps the drink data in a 'drinks' array.\n\n      // Extract ingredients and measures\n      const ingredients = [];\n      const measures = [];\n      for (let i = 1; i <= 15; i++) {\n        // Assume there will not be more than 15 ingredients.\n        if (drinkData[`strIngredient${i}`]) {\n          ingredients.push(drinkData[`strIngredient${i}`]);\n          measures.push(drinkData[`strMeasure${i}`] || \"\"); // Use an empty string if no measure is provided.\n        }\n      }\n\n      // Now, you can update your state with this structured information\n      setCocktail({\n        name: drinkData.strDrink,\n        image: drinkData.strDrinkThumb,\n        glass: drinkData.strGlass,\n        instructions: drinkData.strInstructions,\n        ingredients,\n        // Array of ingredients\n        measures // Corresponding array of measures\n      });\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n    }\n  };\n  const getIngredients = cocktailData => {\n    return cocktailData.ingredients.map((ingredient, index) => {\n      const measure = cocktailData.measures[index];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item list-group-item-action\",\n        children: [measure, \" \", ingredient]\n      }, ingredient, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 text-center\",\n    children: cocktail ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: fetchData,\n        children: \"Get New Cocktail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: cocktail.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cocktail.image,\n        alt: cocktail.name,\n        width: \"250\",\n        className: \"rounded mx-auto d-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), \"Glass Type:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: cocktail.glass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), \"Ingredients:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: getIngredients(cocktail)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), \"Recipe\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cocktail.instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Zd0sIPKT8LwUzSYI9a3y5sqcXuM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","cocktail","setCocktail","fetchData","response","get","drinkData","data","drinks","ingredients","measures","i","push","name","strDrink","image","strDrinkThumb","glass","strGlass","instructions","strInstructions","error","console","getIngredients","cocktailData","map","ingredient","index","measure","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/ramit/Desktop/Sem3/WebServerAdmin/BoozyBrowse/my-cocktail-app/src/App.js"],"sourcesContent":["import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [cocktail, setCocktail] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // ... (rest of your imports and App function)\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php');\r\n      const drinkData = response.data.drinks[0]; // The API wraps the drink data in a 'drinks' array.\r\n\r\n      // Extract ingredients and measures\r\n      const ingredients = [];\r\n      const measures = [];\r\n      for (let i = 1; i <= 15; i++) { // Assume there will not be more than 15 ingredients.\r\n        if (drinkData[`strIngredient${i}`]) {\r\n          ingredients.push(drinkData[`strIngredient${i}`]);\r\n          measures.push(drinkData[`strMeasure${i}`] || \"\"); // Use an empty string if no measure is provided.\r\n        }\r\n      }\r\n\r\n      // Now, you can update your state with this structured information\r\n      setCocktail({\r\n        name: drinkData.strDrink,\r\n        image: drinkData.strDrinkThumb,\r\n        glass: drinkData.strGlass,\r\n        instructions: drinkData.strInstructions,\r\n        ingredients, // Array of ingredients\r\n        measures // Corresponding array of measures\r\n      });\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n  const getIngredients = (cocktailData) => {\r\n    return cocktailData.ingredients.map((ingredient, index) => {\r\n      const measure = cocktailData.measures[index];\r\n      return (\r\n        <li className=\"list-group-item list-group-item-action\" key={ingredient}>\r\n          {measure} {ingredient}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-5 text-center\">\r\n      {cocktail ? (\r\n        <div className=\"card\">\r\n          <button className=\"btn btn-primary\" onClick={fetchData}>\r\n            Get New Cocktail\r\n          </button>\r\n          <h1>{cocktail.name}</h1>\r\n          <img src={cocktail.image} alt={cocktail.name} width='250' className=\"rounded mx-auto d-block\" />\r\n          <div className=\"recipe\">\r\n\r\n            <h3><br/>Glass Type:</h3>\r\n            <p>{cocktail.glass}</p>\r\n            <h3><br/>Ingredients:</h3>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {getIngredients(cocktail)}\r\n            </ul>\r\n          </div>\r\n          <h3><br/>Recipe</h3>\r\n          <p>{cocktail.instructions}</p>\r\n        </div>\r\n      ) : \"Loading...\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}